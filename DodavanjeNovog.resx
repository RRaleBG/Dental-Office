<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AP//wAP///gf///wD///8A///+AH///AA///wAP//8AD//+AAf//gAH//8AD///AA///gAH//4AB///A
        A///wAP//+AH///4B////A//////////////////
</value>
  </data>
</root>